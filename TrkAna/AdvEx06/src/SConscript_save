#!/usr/bin/env python
#
# Script to build the files found in this directory.
#
# Original author Rob Kutschke.
#

import os
Import('env')
Import('mu2e_helper')

helper=mu2e_helper(env);
rootlibs  = env['ROOTLIBS']
babarlibs = env['BABARLIBS']

mainlib = helper.make_mainlib ( ['mu2e_TrkReco',
                                 'mu2e_ParticleID',
                                 'mu2e_BTrkData',
                                 'mu2e_Mu2eBTrk',
                                 'mu2e_Mu2eUtilities',
                                 'mu2e_CaloCluster',
                                 'mu2e_SeedService_SeedService_service',
                                 'mu2e_ConditionsService',
                                 'mu2e_GeometryService',
                                 'mu2e_BFieldGeom',
                                 'mu2e_Mu2eHallGeom',
                                 'mu2e_TrackerGeom',
                                 'mu2e_CalorimeterGeom',
                                 'mu2e_MCDataProducts',
                                 'mu2e_RecoDataProducts',
                                 'mu2e_GlobalConstantsService',
                                 'mu2e_Mu2eInterfaces',
                                 'mu2e_DataProducts',
                                 'mu2e_GeneralUtilities',
                                 'mu2e_CRVAnalysis',
                                 babarlibs,
                                 'art_Framework_Core',
                                 'art_Framework_Principal',
                                 'art_Framework_Services_Registry',
                                 'art_Framework_Services_Optional_TFileService_service',
                                 'art_Framework_Services_Optional',
                                 'art_Persistency_Provenance',
                                 'art_Persistency_Common',
                                 'art_Utilities',
                                 'canvas',
                                 'fhiclcpp',
                                 'cetlib',
                                 'cetlib_except',
                                 rootlibs,
                                 'CLHEP',
                                 'HepPDT',
                                 'HepPID',
                                 'xerces-c',
                                 'boost_filesystem',
                                 'boost_system',
                                 ] )

helper.make_plugins( [ mainlib,
                       'mu2e_TrkDiag',
                       'mu2e_TrkReco',
                       'mu2e_ParticleID',
                       'mu2e_BTrkData',
                       'mu2e_Mu2eBTrk',
                       'mu2e_Mu2eUtilities',
                       'mu2e_CaloCluster',
                       'mu2e_ConditionsService',
                       'mu2e_GeometryService',
                       'mu2e_BFieldGeom',
                       'mu2e_TrackerGeom',
                       'mu2e_CalorimeterGeom',
                       'mu2e_MCDataProducts',
                       'mu2e_RecoDataProducts',
                       'mu2e_GlobalConstantsService',
                       'mu2e_Mu2eInterfaces',
                       'mu2e_DataProducts',
                       'mu2e_GeneralUtilities',
                       'mu2e_CRVAnalysis',
                       'art_Framework_Core',
                       'art_Framework_Principal',
                       'art_Persistency_Common',
                       'art_Persistency_Provenance',
                       'art_Utilities',
                       'canvas',
                       'fhiclcpp',
                       'cetlib',
                       'cetlib_except',
                       'boost_filesystem',
                       'boost_system',
                       'Core',
                       'art_Framework_Services_Registry',
                       'art_Framework_Services_Optional',
                       'art_Framework_Services_Optional_TFileService_service',
                       rootlibs,
                       babarlibs,
                     ] )

helper.make_dict_and_map( [ mainlib,
                            'art_Persistency_Common',
                            'Core',
                            'canvas',
                            'cetlib',
                            'cetlib_except'
                          ] )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
